{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _bootstrapUtils = require(\"./utils/bootstrapUtils\");\n\nvar _createChainedFunction = _interopRequireDefault(require(\"./utils/createChainedFunction\"));\n\nvar propTypes = {\n  onClick: _propTypes.default.func,\n\n  /**\n   * The toggle content, if left empty it will render the default toggle (seen above).\n   */\n  children: _propTypes.default.node\n};\nvar contextTypes = {\n  $bs_navbar: _propTypes.default.shape({\n    bsClass: _propTypes.default.string,\n    expanded: _propTypes.default.bool,\n    onToggle: _propTypes.default.func.isRequired\n  })\n};\n\nvar NavbarToggle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(NavbarToggle, _React$Component);\n\n  function NavbarToggle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = NavbarToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onClick = _this$props.onClick,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"onClick\", \"className\", \"children\"]);\n    var navbarProps = this.context.$bs_navbar || {\n      bsClass: 'navbar'\n    };\n    var buttonProps = (0, _extends2.default)({\n      type: 'button'\n    }, props, {\n      onClick: (0, _createChainedFunction.default)(onClick, navbarProps.onToggle),\n      className: (0, _classnames.default)(className, (0, _bootstrapUtils.prefix)(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')\n    });\n\n    if (children) {\n      return _react.default.createElement(\"button\", buttonProps, children);\n    }\n\n    return _react.default.createElement(\"button\", buttonProps, _react.default.createElement(\"span\", {\n      className: \"sr-only\"\n    }, \"Toggle navigation\"), _react.default.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), _react.default.createElement(\"span\", {\n      className: \"icon-bar\"\n    }), _react.default.createElement(\"span\", {\n      className: \"icon-bar\"\n    }));\n  };\n\n  return NavbarToggle;\n}(_react.default.Component);\n\nNavbarToggle.propTypes = propTypes;\nNavbarToggle.contextTypes = contextTypes;\nvar _default = NavbarToggle;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}